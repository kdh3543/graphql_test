import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import axios from "axios";
import { API, graphqlOperation } from "aws-amplify";
import { listPosts } from "../graphql/queries";
import { createPost } from "../graphql/mutations";
import styles from "../../styles/Home.module.css";
import { onCreatePost } from "../graphql/subscriptions";

const Home: NextPage = () => {
  const [formData, setFormData] = useState({
    id: 0,
    title: "",
    content: "",
  });
  const [posts, setPosts] = useState<any>([]);
  const onChange = (event: any) => {
    const {
      target: { name, value },
    } = event;
    console.log(name, value);
    setFormData((prev) => ({ ...prev, [name]: value, id: 1 }));
  };
  const callPosts = async () => {
    const request = await API.graphql(graphqlOperation(listPosts));
    setPosts(request.data.listPosts.items);
  };
  const onSubmit = async (event: any) => {
    event.preventDefault();
    await API.graphql(graphqlOperation(createPost, { input: formData }));
  };

  const realTimePosts = () => {
    API.graphql(graphqlOperation(onCreatePost)).subscribe({
      next: ({ value: { data } }: any) =>
        setPosts((prev: any) => [{ ...data.onCreatePost }, ...prev]),
    });
  };
  useEffect(() => {
    callPosts();
  }, []);
  useEffect(() => {
    console.log(posts);
  }, [posts]);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>GraphQL Test</h1>
        <section>
          <h3>Post something!</h3>
          <form onSubmit={onSubmit}>
            <input
              type="text"
              name="title"
              placeholder="what is the title"
              required
              onChange={(e) => onChange(e)}
              value={formData.title}
            />
            <textarea
              name="content"
              required
              placeholder="what is content"
              onChange={(e) => onChange(e)}
              value={formData.content}
            ></textarea>
            <button>Post</button>
          </form>
        </section>
        <hr />
        <section>
          <h3>Timeline</h3>
          <div>
            {posts.map((item: any) => (
              <article key={item.id}>
                <div className={styles.box}>
                  <h4>{item.title}</h4>
                  <h5>{item.content}</h5>
                </div>
              </article>
            ))}
          </div>
        </section>
      </main>
    </div>
  );
};

export default Home;
